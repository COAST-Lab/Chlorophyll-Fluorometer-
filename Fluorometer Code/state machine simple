// Particle.variable() & Particle.function()
uint8_t LedPin = D2; // Use the appropriate pin for your external LED

SYSTEM_THREAD(ENABLED);
SYSTEM_MODE(SEMI_AUTOMATIC);

void setup() {
  Serial.begin(9600);

  pinMode(LedPin, OUTPUT);
}

void loop() {
  if (Serial.available()) {
    String command = Serial.readStringUntil('\n');
    command.trim();

    if (command.equalsIgnoreCase("idle")) {
      digitalWrite(LedPin, LOW); // Turn LED off
      // Handle IDLE state (no LED response)
      Serial.println("IDLE state loop!");
    } else if (command.equalsIgnoreCase("warmup")) {
      // Handle WARMUP state (LED blinking)
      digitalWrite(LedPin, HIGH); // Turn LED on
      delay(5000);
      digitalWrite(LedPin, LOW); // Turn LED off
      delay(5000);
      digitalWrite(LedPin, HIGH); // Turn LED on
      delay(5000);
      digitalWrite(LedPin, LOW); // Turn LED off
      delay(5000);
      // Repeat the above lines for the desired number of blinks
      Serial.println("WARMUP state loop!");
      delay(5000);
      Serial.println("move to measure state");

    } else if (command.equalsIgnoreCase("measure")) {
      // Handle MEASURE state (LED on, take measurements)
      digitalWrite(LedPin, HIGH); // Turn LED on
      // Perform measurements and other actions here...
      delay(5000); // Placeholder delay for measurement
      digitalWrite(LedPin, LOW); // Turn LED off
      Serial.println("MEASURE state loop!");
    } else {
      Serial.println("Invalid command. Please enter 'idle', 'warmup', or 'measure'.");
    }
  }

  // Rest of your loop code...
  // Perform other tasks, data logging, etc.
  // Call other functions if needed.
}
